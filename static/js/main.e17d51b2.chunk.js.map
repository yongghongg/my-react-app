{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["quoteList","App","props","state","quote","author","generateNewQuote","bind","tweetCode","axios","get","then","result","push","data","quotes","setState","catch","err","console","log","random","Math","floor","length","this","window","open","encodeURIComponent","id","className","onClick","href","target","rel","class","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAIIA,EAAY,GAEKC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAEV,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAPA,E,qDAUnB,WAAqB,IAAD,OAClBE,IACGC,IACC,0IAEDC,MAAK,SAACC,GACLZ,EAAUa,KAAKD,EAAOE,KAAKC,QAC3B,EAAKC,SAAS,CACZZ,MAAOJ,EAAU,GAAG,GAAGI,MACvBC,OAAQL,EAAU,GAAG,GAAGK,YAG3BY,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,8BAIlB,WACE,IAAIG,EAASC,KAAKC,MAAMD,KAAKD,SAAWrB,EAAU,GAAGwB,QACjDxB,EAAU,GAAGqB,KAAYI,KAAKtB,MAAMC,QACtCiB,GAAU,GAEZI,KAAKT,SAAS,CACZZ,MAAOJ,EAAU,GAAGqB,GAAQjB,MAC5BC,OAAQL,EAAU,GAAGqB,GAAQhB,W,uBAIjC,WACEqB,OAAOC,KACL,0CACEC,mBAAmBH,KAAKtB,MAAMC,MAAQ,KAAOqB,KAAKtB,MAAME,W,oBAI9D,WACE,OACE,sBAAKwB,GAAG,YAAR,UACE,oBAAIA,GAAG,OAAOC,UAAU,aAAxB,SACGL,KAAKtB,MAAMC,QAEd,oBAAGyB,GAAG,SAASC,UAAU,eAAzB,eACKL,KAAKtB,MAAME,UAEhB,sBAAKyB,UAAU,UAAf,UACE,wBACEA,UAAU,kBACVD,GAAG,YACHE,QAASN,KAAKnB,iBAHhB,uBAOA,mBACEuB,GAAG,cACHG,KACE,0CACAJ,mBAAmBH,KAAKtB,MAAMC,MAAQ,KAAOqB,KAAKtB,MAAME,QAE1D4B,OAAO,SACPC,IAAI,aAPN,SASE,mBAAGC,MAAM,gBAAT,+B,GAxEqBC,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e17d51b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\n\nlet quoteList = [];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: \"\",\n      author: \"\"\n    };\n    this.generateNewQuote = this.generateNewQuote.bind(this);\n    this.tweetCode = this.tweetCode.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n      )\n      .then((result) => {\n        quoteList.push(result.data.quotes);\n        this.setState({\n          quote: quoteList[0][0].quote,\n          author: quoteList[0][0].author\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  generateNewQuote() {\n    let random = Math.floor(Math.random() * quoteList[0].length);\n    if (quoteList[0][random] === this.state.quote) {\n      random += 1;\n    }\n    this.setState({\n      quote: quoteList[0][random].quote,\n      author: quoteList[0][random].author\n    });\n  }\n\n  tweetCode() {\n    window.open(\n      \"https://twitter.com/intent/tweet/?text=\" +\n        encodeURIComponent(this.state.quote + \"--\" + this.state.author)\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"quote-box\">\n        <h1 id=\"text\" className=\"quote-text\">\n          {this.state.quote}\n        </h1>\n        <p id=\"author\" className=\"quote-author\">\n          - {this.state.author}\n        </p>\n        <div className=\"buttons\">\n          <button\n            className=\"btn btn-primary\"\n            id=\"new-quote\"\n            onClick={this.generateNewQuote}\n          >\n            New Quote\n          </button>\n          <a\n            id=\"tweet-quote\"\n            href={\n              \"https://twitter.com/intent/tweet/?text=\" +\n              encodeURIComponent(this.state.quote + \"--\" + this.state.author)\n            }\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <i class=\"fa fa-twitter\">Tweet</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload. <br></br>\n//           Let's see if this works too!\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}